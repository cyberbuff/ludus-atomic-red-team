- name: Run Linux Tests
  block:
    - name: "Check for and install prereqs for {{ ansible_atomic_test }}"
      block:
        - name: "Check prereqs for {{ ansible_atomic_test }}"
          ansible.builtin.shell:
            cmd: |
              Invoke-AtomicTest {{ ansible_atomic_test }} -CheckPrereqs
          args:
            executable: /usr/bin/pwsh
          register: check_prereqs
          failed_when: '"Prerequisites not met:" in check_prereqs.stdout'
          changed_when: false
      rescue:
        - name: "Install prereqs for {{ ansible_atomic_test }}"
          ansible.builtin.shell:
            cmd: |
              Invoke-AtomicTest {{ ansible_atomic_test }} -GetPrereqs
          args:
            executable: /usr/bin/pwsh
          register: get_prereqs
          ignore_errors: true

        - name: "Debug prereqs {{ ansible_atomic_test }}"
          ansible.builtin.debug:
            var: get_prereqs.stdout
          when: get_prereqs.changed

    - name: "Execute {{ ansible_atomic_test }}"
      ansible.builtin.shell:
        cmd: |
          Invoke-AtomicTest {{ ansible_atomic_test }} -Confirm:$false -TimeoutSeconds 300 -ExecutionLogPath /root/atc_execution.csv
      args:
        executable: /usr/bin/pwsh
      register: execute_test
      ignore_errors: true

    - name: "Execute {{ ansible_atomic_test }}"
      ansible.builtin.debug:
        var: execute_test.stdout

    - name: "Cleanup {{ ansible_atomic_test }}"
      ansible.builtin.shell:
        cmd: |
          Invoke-AtomicTest {{ ansible_atomic_test }} -Cleanup
      args:
        executable: /usr/bin/pwsh
      register: cleanup_test
      ignore_errors: true

    - name: "Cleanup {{ ansible_atomic_test }}"
      ansible.builtin.debug:
        var: cleanup_test.stdout
      when: cleanup_test.rc != 0